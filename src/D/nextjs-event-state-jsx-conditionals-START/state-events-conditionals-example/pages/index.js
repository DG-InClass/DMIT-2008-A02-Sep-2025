import { MOVIE_LIST } from '../utils/movies';
import { useState } from 'react'; // This is our "hook" to tell React about data (state) that will be affecting our component.

import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import Alert from '@mui/material/Alert';
import Button from '@mui/material/Button';
import Container from '@mui/material/Container';
import Grid from '@mui/material/Grid';
import TextField from '@mui/material/TextField';
import Typography from '@mui/material/Typography';

import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemText from '@mui/material/ListItemText';

export default function Home() {
  // Data items directly associated with user input from the form
  const [search, setSearch] = useState(""); // search text
  const [year, setYear] = useState(""); // year filter
  // I'll use React state to help me manage the movies that
  // I will display to the user
  const [movies, setMovies] = useState(MOVIE_LIST);

  const handleSubmit = (event) => {
    event.preventDefault(); // Stop it from sending to the back end
    console.log('search: ', search);
    console.log('year:', year);
    filterMovies();
  }

  const filterMovies = () => {
    // make a copy of the original movie list
    let filteredMovies = [...MOVIE_LIST]; // spread operator

    // apply filtering of the search text to that list
    if(search.trim() !== "") {
      filteredMovies = filteredMovies.filter((movieData) => {
        let movieName = movieData.name.toLowerCase();
        let partialName = search.toLowerCase();
        return movieName.includes(partialName);
      })
    }
    
    // apply filtering of the year to that list
    if(year.trim() !== "") {
      let yearNumber = parseInt(year);
      filteredMovies = filteredMovies.filter((movieData) => {
        // comparison of the Year
        return yearNumber === movieData.year;
      })
    }

    // update the state with the filtered data
    setMovies(filteredMovies); // the state of my component updated
  }

  return (
    <div>
      <Head>
        <title>Our Movie App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
      </Head>

      <main>
        <Container>
          <Typography variant="h2" component="h2" style={{textAlign: "center"}}>
            Movies
          </Typography>
          <form style={{width: '100%'}} onSubmit={handleSubmit}>
            <Grid container spacing={2}>
              <Grid item xs={6}>
                <TextField
                  id="search-field"
                  label="search..."
                  variant="standard"
                  sx={{width: '100%'}}
                  onChange={(e) => {setSearch(e.target.value)}}
                  value={search}
                />
              </Grid>
              <Grid item xs={4}>
                <TextField
                  id="year-field"
                  label="year"
                  variant="standard"
                  sx={{width: '100%'}}
                  onChange={(e) => {setYear(e.target.value)}}
                  value={year}
                />
              </Grid>
              <Grid item xs={2}>
                <Button
                  type="submit"
                  variant="contained"
                >Filter</Button>
              </Grid>
              <Grid item xs={10}>
                {/* Add the error message here*/}
              </Grid>
            </Grid>
          </form>
          <List sx={{width: `100%`}}>
          { /* Swapped out the imported data for the state variable */}
          { movies.length === 0 ? 
            <ListItem>
              <ListItemText>
                <Typography variant="p" component="div">
                  No results match your filter criteria.
                </Typography>
              </ListItemText>
            </ListItem>
          : movies.map((movieData, index)=> {
              return <ListItem key={index}>
                <ListItemText>
                  <Typography variant="p" component="div">
                    {movieData.name} ({movieData.year})
                  </Typography>
                </ListItemText>
              </ListItem>
            })
          }
          </List>
        </Container>
      </main>
    </div>
  )
}
